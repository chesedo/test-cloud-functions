# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python37:
      python.version: '3.7'
      python.runtime: 'python37'
    # Enable once out of beta
    # Python38:
    #   python.version: '3.8'
    #   python.runtime: 'python38'

variables:
  dc: 'docker-compose -f .devcontainer/docker-compose.yml -f ../Container/docker-compose.yml -f ../Container/docker-compose.linux.yml'
  dcr: '$(dc) run -w /workspace/emailer --entrypoint /bin/bash gcf-debug'
  dcir: '$(dc) run -w /workspace/emailer --entrypoint /bin/bash -e EMAIL_SERVER=$(EmailServer) -e EMAIL_USERNAME=$(EmailUsername) -e EMAIL_PASSWORD=$(EmailPassword) -e EMAIL_ADDRESS=$(EmailAddress) -e SENDGRID_API_KEY=$(SendGridKey) gcf-debug'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- task: DownloadSecureFile@1
  name: keyFile
  inputs:
    secureFile: 'eta-testing-azure.json'
  displayName: 'Download key file'

- script: |
    $(dc) build
  displayName: 'Build Container'
  workingDirectory: emailer
  env:
    GOOGLE_APPLICATION_CREDENTIALS: $(keyFile.secureFilePath)

- script: |
    $(dcr) format --check
  displayName: 'Format'
  workingDirectory: emailer
  env:
    GOOGLE_APPLICATION_CREDENTIALS: $(keyFile.secureFilePath)

- script: |
    $(dcr) lint_flake8
    $(dcr) lint_mypy
  displayName: 'Lint'
  workingDirectory: emailer
  env:
    GOOGLE_APPLICATION_CREDENTIALS: $(keyFile.secureFilePath)


- script: |
    $(dcr) test --ignore=tests/ --cov-report xml --no-coverage-upload
  displayName: 'Unit Tests'
  workingDirectory: emailer
  env:
    GOOGLE_APPLICATION_CREDENTIALS: $(keyFile.secureFilePath)


- script: |
    $(dcir) test --cov-report xml --cov-append --no-coverage-upload tests/test_emailer.py
  env:
    GOOGLE_APPLICATION_CREDENTIALS: $(keyFile.secureFilePath)
  displayName: 'Integration Tests'
  workingDirectory: emailer

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage results'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: 'emailer/coverage.xml'

- script: |
    gcloud auth activate-service-account --key-file $(keyFile.secureFilePath)
    gcloud functions deploy $FUNCTION-test --trigger-resource eta-testing-bucket --trigger-event google.storage.object.finalize --memory 128MB --set-env-vars SENDGRID_API_KEY=$SENDGRID_API_KEY --max-instances 1 --region europe-west1 --entry-point $FUNCTION --runtime $(python.runtime) --project $TEST_PROJECT --quiet
  env:
    FUNCTION: emailer
    TEST_PROJECT: $(TestProject)
    SENDGRID_API_KEY: $(SendGridKey)
  displayName: 'Deploy Tests'
  workingDirectory: emailer

- script: |
    $(dcir) test --no-cov tests/test_events.py
  env:
    GOOGLE_APPLICATION_CREDENTIALS: $(keyFile.secureFilePath)
  displayName: 'Events Tests'
  workingDirectory: emailer

- script: |
    gcloud functions delete $FUNCTION-test --region europe-west1 --project $TEST_PROJECT  --quiet
  env:
    FUNCTION: emailer
    TEST_PROJECT: $(TestProject)
  displayName: 'Deploy Tests (Cleanup)'
  workingDirectory: emailer
  condition: succeededOrFailed()
